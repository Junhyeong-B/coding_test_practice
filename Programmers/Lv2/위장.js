function solution(clothes) {
  const clothesMap = {};
  for (const [, clothesType] of clothes) {
    clothesMap[clothesType] = (clothesMap[clothesType] || 1) + 1;
  }

  return Object.values(clothesMap).reduce((acc, cur) => acc * cur) - 1;
}

/**
 * 정확성  테스트
 *  테스트 1 〉	통과 (0.42ms, 30.1MB)
 *  테스트 2 〉	통과 (0.26ms, 30.1MB)
 *  테스트 3 〉	통과 (0.11ms, 30MB)
 *  테스트 4 〉	통과 (0.28ms, 30.1MB)
 *  테스트 5 〉	통과 (0.11ms, 30.1MB)
 *  테스트 6 〉	통과 (0.10ms, 30.2MB)
 *  테스트 7 〉	통과 (0.14ms, 30.3MB)
 *  테스트 8 〉	통과 (0.16ms, 30.3MB)
 *  테스트 9 〉	통과 (0.29ms, 30MB)
 *  테스트 10 〉통과 (0.11ms, 30.2MB)
 *  테스트 11 〉통과 (0.13ms, 30MB)
 *  테스트 12 〉통과 (0.12ms, 30.2MB)
 *  테스트 13 〉통과 (0.12ms, 30MB)
 *  테스트 14 〉통과 (0.25ms, 30.3MB)
 *  테스트 15 〉통과 (0.11ms, 30MB)
 *  테스트 16 〉통과 (0.07ms, 30.1MB)
 *  테스트 17 〉통과 (0.10ms, 29.9MB)
 *  테스트 18 〉통과 (0.25ms, 30.1MB)
 *  테스트 19 〉통과 (0.11ms, 30.2MB)
 *  테스트 20 〉통과 (0.10ms, 30.2MB)
 *  테스트 21 〉통과 (0.09ms, 29.8MB)
 *  테스트 22 〉통과 (0.10ms, 30.2MB)
 *  테스트 23 〉통과 (0.10ms, 30.1MB)
 *  테스트 24 〉통과 (0.12ms, 30.3MB)
 *  테스트 25 〉통과 (0.17ms, 30MB)
 *  테스트 26 〉통과 (0.15ms, 30.1MB)
 *  테스트 27 〉통과 (0.11ms, 30.1MB)
 *  테스트 28 〉통과 (0.11ms, 30.3MB)
 * 채점 결과
 *  정확성: 100.0
 *  합계: 100.0 / 100.0
 */
